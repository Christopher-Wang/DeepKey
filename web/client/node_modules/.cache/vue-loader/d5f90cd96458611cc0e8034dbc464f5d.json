{"remainingRequest":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/christopherwang/Code/DeepKey/web/client/src/components/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/christopherwang/Code/DeepKey/web/client/src/components/Create.vue","mtime":1636168154394},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/cache-loader/dist/cjs.js","mtime":1636130638384},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/babel-loader/lib/index.js","mtime":1636130638609},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/cache-loader/dist/cjs.js","mtime":1636130638384},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/vue-loader/lib/index.js","mtime":1636130632222}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgY29uc3QgU1RBVFVTID0gewogICAgICBQRU5ESU5HOiAicGVuZGluZyIsCiAgICAgIENPUlJFQ1Q6ICJjb3JyZWN0IiwKICAgICAgTUlTVEFLRTogIm1pc3Rha2UiCiAgfTsKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgICBkYXRhOiBmdW5jdGlvbigpewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICBwb3N0OiB7CiAgICAgICAgICAgICAgICAgIGJvZHk6ICIiLAogICAgICAgICAgICAgICAgICBrZXlFdmVudHM6IFtdCiAgICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICB9LAogICAgICBjb21wdXRlZDogewogICAgICAgICAgcHJvbXB0OiBmdW5jdGlvbiAoKXsKICAgICAgICAgICAgICBsZXQgcHJvbXB0U2VudGVuY2UgPSAiVGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZyI7CiAgICAgICAgICAgICAgbGV0IHByb21wdEFycmF5ID0gW107CiAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9tcHRTZW50ZW5jZS5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgICAgICAgIHByb21wdEFycmF5W2ldID0gewogICAgICAgICAgICAgICAgICAgICAgY2hhcjogcHJvbXB0U2VudGVuY2VbaV0sCiAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IFNUQVRVUy5QRU5ESU5HCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBwcm9tcHRBcnJheTsKICAgICAgICAgIH0sCiAgICAgICAgICBib2R5OiBmdW5jdGlvbiAoKSB7cmV0dXJuIHRoaXMucG9zdC5ib2R5O30KICAgICAgfSwKICAgICAgd2F0Y2g6ewogICAgICAgICAgYm9keTogZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAvL0NoYW5nZSBjb2xvdXIgb2YgdGhlIHByb21wdAogICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5ib2R5Lmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvbXB0W2ldLnN0YXR1cyA9ICh0aGlzLmJvZHlbaV0gPT0gdGhpcy5wcm9tcHRbaV0uY2hhcikgPyBTVEFUVVMuQ09SUkVDVDogU1RBVFVTLk1JU1RBS0U7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vUmVzZXQgY29sb3VyIG9uIGJhY2tzcGFjZQogICAgICAgICAgICAgIGZvciAobGV0IGkgPSB0aGlzLmJvZHkubGVuZ3RoOyBpIDwgdGhpcy5wcm9tcHQubGVuZ3RoOyBpKyspIHsgCiAgICAgICAgICAgICAgICAgIHRoaXMucHJvbXB0W2ldLnN0YXR1cyA9IFNUQVRVUy5QRU5ESU5HOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAvL1Jlc2V0IHRoZSBrZXlFdmVudHMgaWYgdGhlIHRleHRib3ggaXMgcmVzZXQKICAgICAgICAgICAgICBpZiAodGhpcy5ib2R5Lmxlbmd0aD09MCl7CiAgICAgICAgICAgICAgICAgIHRoaXMucG9zdC5rZXlFdmVudHMgPSBbXTsKICAgICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgIH0sCiAgICAgIG1ldGhvZHM6IHsKICAgICAgICAgIGFkZFR5cGluZ1NhbXBsZTogZnVuY3Rpb24gKCl7CiAgICAgICAgICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkodGhpcy5wb3N0KSk7CiAgICAgICAgICB9LAogICAgICAgICAgcHVzaEtleUV2ZW50OiBmdW5jdGlvbihrZXlCb2FyZEV2ZW50KXsKICAgICAgICAgICAgICBsZXQga2V5RXZlbnQgPSB7CiAgICAgICAgICAgICAgICAgICAgICBldmVudFRpbWU6IHBlcmZvcm1hbmNlLm5vdygpLAogICAgICAgICAgICAgICAgICAgICAgZXZlbnRUeXBlOiBrZXlCb2FyZEV2ZW50LnR5cGUsCiAgICAgICAgICAgICAgICAgICAgICBhbHRLZXk6IGtleUJvYXJkRXZlbnQuYWx0S2V5LAogICAgICAgICAgICAgICAgICAgICAgY29kZToga2V5Qm9hcmRFdmVudC5jb2RlLAogICAgICAgICAgICAgICAgICAgICAgY3RybEtleToga2V5Qm9hcmRFdmVudC5jdHJsS2V5LAogICAgICAgICAgICAgICAgICAgICAgaXNDb21wb3Npbmc6IGtleUJvYXJkRXZlbnQuaXNDb21wb3NpbmcsCiAgICAgICAgICAgICAgICAgICAgICBrZXk6IGtleUJvYXJkRXZlbnQua2V5LAogICAgICAgICAgICAgICAgICAgICAgbG9jYWxlOiBrZXlCb2FyZEV2ZW50LmxvY2FsZSwKICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBrZXlCb2FyZEV2ZW50LmtleSwKICAgICAgICAgICAgICAgICAgICAgIG1ldGFLZXk6IGtleUJvYXJkRXZlbnQubWV0YUtleSwKICAgICAgICAgICAgICAgICAgICAgIHJlcGVhdDoga2V5Qm9hcmRFdmVudC5yZXBlYXQsCiAgICAgICAgICAgICAgICAgICAgICBzaGlmdEtleToga2V5Qm9hcmRFdmVudC5zaGlmdEtleSwKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB0aGlzLnBvc3Qua2V5RXZlbnRzLnB1c2goa2V5RXZlbnQpOwogICAgICAgICAgfQogICAgICB9Cn0K"},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Create.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Create a Typing Sample</h1>\n    <form @submit.prevent=\"addTypingSample\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>Prompt:</label> <br/>\n                <span v-for=\"(char, index) in prompt\" :key=\"index\" v-bind:class=\"char.status\">{{char.char}}</span>\n            </div>\n          </div>\n        </div><br/>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <textarea class=\"form-control\" \n                v-model=\"body\" rows=\"5\" \n                v-on:keydown=\"pushKeyEvent\" \n                v-on:keyup=\"pushKeyEvent\"\n                />\n            </div>\n          </div>\n        </div><br/>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Create</button>\n        </div>\n    </form>\n  </div>\n</template>\n\n<script>\n    const STATUS = {\n        PENDING: \"pending\",\n        CORRECT: \"correct\",\n        MISTAKE: \"mistake\"\n    };\n\n    export default {\n        data: function(){\n            return {\n                post: {\n                    body: \"\",\n                    keyEvents: []\n                }\n            }\n        },\n        computed: {\n            prompt: function (){\n                let promptSentence = \"The quick brown fox jumps over the lazy dog\";\n                let promptArray = [];\n                for (let i = 0; i < promptSentence.length; i++){\n                    promptArray[i] = {\n                        char: promptSentence[i],\n                        status: STATUS.PENDING\n                    };\n                }\n                return promptArray;\n            },\n            body: function () {return this.post.body;}\n        },\n        watch:{\n            body: function(){\n                //Change colour of the prompt\n                for (let i = 0; i < this.body.length; i++){\n                        this.prompt[i].status = (this.body[i] == this.prompt[i].char) ? STATUS.CORRECT: STATUS.MISTAKE;\n                }\n                //Reset colour on backspace\n                for (let i = this.body.length; i < this.prompt.length; i++) { \n                    this.prompt[i].status = STATUS.PENDING;\n                }\n                //Reset the keyEvents if the textbox is reset\n                if (this.body.length==0){\n                    this.post.keyEvents = [];\n                }\n            }\n        },\n        methods: {\n            addTypingSample: function (){\n                alert(JSON.stringify(this.post));\n            },\n            pushKeyEvent: function(keyBoardEvent){\n                let keyEvent = {\n                        eventTime: performance.now(),\n                        eventType: keyBoardEvent.type,\n                        altKey: keyBoardEvent.altKey,\n                        code: keyBoardEvent.code,\n                        ctrlKey: keyBoardEvent.ctrlKey,\n                        isComposing: keyBoardEvent.isComposing,\n                        key: keyBoardEvent.key,\n                        locale: keyBoardEvent.locale,\n                        location: keyBoardEvent.key,\n                        metaKey: keyBoardEvent.metaKey,\n                        repeat: keyBoardEvent.repeat,\n                        shiftKey: keyBoardEvent.shiftKey,\n                    };\n                this.post.keyEvents.push(keyEvent);\n            }\n        }\n  }\n</script>\n\n<style scoped>\n    .pending {\n        white-space: pre;\n        color: gray;\n    }\n    .correct {\n        white-space: pre;\n        color: green;\n    }\n    .mistake{\n        white-space: pre;\n        color: red;\n    }\n</style>"]}]}