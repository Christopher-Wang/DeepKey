{"remainingRequest":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/babel-loader/lib/index.js!/Users/christopherwang/Code/DeepKey/web/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/christopherwang/Code/DeepKey/web/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/christopherwang/Code/DeepKey/web/client/src/components/Sample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/christopherwang/Code/DeepKey/web/client/src/components/Sample.vue","mtime":1636204196824},{"path":"/Users/christopherwang/Code/DeepKey/web/client/babel.config.js","mtime":1636130707422},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/cache-loader/dist/cjs.js","mtime":1636130638384},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/babel-loader/lib/index.js","mtime":1636130638609},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/cache-loader/dist/cjs.js","mtime":1636130638384},{"path":"/Users/christopherwang/Code/DeepKey/web/client/node_modules/vue-loader/lib/index.js","mtime":1636130632222}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGVhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBTVEFUVVMgPSB7CiAgUEVORElORzogInBlbmRpbmciLAogIENPUlJFQ1Q6ICJjb3JyZWN0IiwKICBNSVNUQUtFOiAibWlzdGFrZSIKfTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzYW1wbGVOdW1iZXI6IDAsCiAgICAgIHNhbXBsZTogewogICAgICAgIGJvZHk6ICIiLAogICAgICAgIGtleUV2ZW50czogW10sCiAgICAgICAgbGFiZWw6ICJzb2JlciIKICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwcm9tcHQ6IGZ1bmN0aW9uIHByb21wdCgpIHsKICAgICAgdmFyIHByb21wdFNlbnRlbmNlID0gIlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2ciOwogICAgICB2YXIgcHJvbXB0QXJyYXkgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvbXB0U2VudGVuY2UubGVuZ3RoOyBpKyspIHsKICAgICAgICBwcm9tcHRBcnJheVtpXSA9IHsKICAgICAgICAgIGNoYXI6IHByb21wdFNlbnRlbmNlW2ldLAogICAgICAgICAgc3RhdHVzOiBTVEFUVVMuUEVORElORwogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHJldHVybiBwcm9tcHRBcnJheTsKICAgIH0sCiAgICBib2R5OiBmdW5jdGlvbiBib2R5KCkgewogICAgICByZXR1cm4gdGhpcy5zYW1wbGUuYm9keTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBib2R5OiBmdW5jdGlvbiBib2R5KCkgewogICAgICBpZiAodGhpcy5ib2R5Lmxlbmd0aCA8PSB0aGlzLnByb21wdC5sZW5ndGgpIHsKICAgICAgICAvL0NoYW5nZSBjb2xvdXIgb2YgdGhlIHByb21wdAogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ib2R5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLnByb21wdFtpXS5zdGF0dXMgPSB0aGlzLmJvZHlbaV0gPT0gdGhpcy5wcm9tcHRbaV0uY2hhciA/IFNUQVRVUy5DT1JSRUNUIDogU1RBVFVTLk1JU1RBS0U7CiAgICAgICAgfSAvL1Jlc2V0IGNvbG91ciBvbiBiYWNrc3BhY2UKCgogICAgICAgIGZvciAodmFyIF9pID0gdGhpcy5ib2R5Lmxlbmd0aDsgX2kgPCB0aGlzLnByb21wdC5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgIHRoaXMucHJvbXB0W19pXS5zdGF0dXMgPSBTVEFUVVMuUEVORElORzsKICAgICAgICB9CiAgICAgIH0gLy9SZXNldCB0aGUga2V5RXZlbnRzIGlmIHRoZSB0ZXh0Ym94IGlzIHJlc2V0CgoKICAgICAgaWYgKHRoaXMuYm9keS5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuc2FtcGxlLmtleUV2ZW50cyA9IFtdOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUeXBpbmdTYW1wbGU6IGZ1bmN0aW9uIGFkZFR5cGluZ1NhbXBsZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciB1cmwgPSAiaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FkZFNhbXBsZSI7CiAgICAgIHZhciBib2R5ID0gdGhpcy5zYW1wbGU7CiAgICAgIHRoaXMuYXhpb3MucG9zdCh1cmwsIGJvZHkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnNhbXBsZSA9IHsKICAgICAgICAgIGJvZHk6ICIiLAogICAgICAgICAga2V5RXZlbnRzOiBbXSwKICAgICAgICAgIGxhYmVsOiAic29iZXIiCiAgICAgICAgfTsKICAgICAgICBfdGhpcy5zYW1wbGVOdW1iZXIrKzsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIHB1c2hLZXlFdmVudDogZnVuY3Rpb24gcHVzaEtleUV2ZW50KGtleUJvYXJkRXZlbnQpIHsKICAgICAgaWYgKGtleUJvYXJkRXZlbnQua2V5ID09ICJFbnRlciIgfHwga2V5Qm9hcmRFdmVudC5rZXkgPT0gIkNvbnRyb2wiKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICA7CiAgICAgIHZhciBrZXlFdmVudCA9IHsKICAgICAgICBldmVudFRpbWU6IHBlcmZvcm1hbmNlLm5vdygpLAogICAgICAgIGV2ZW50VHlwZToga2V5Qm9hcmRFdmVudC50eXBlLAogICAgICAgIGFsdEtleToga2V5Qm9hcmRFdmVudC5hbHRLZXksCiAgICAgICAgY29kZToga2V5Qm9hcmRFdmVudC5jb2RlLAogICAgICAgIGN0cmxLZXk6IGtleUJvYXJkRXZlbnQuY3RybEtleSwKICAgICAgICBpc0NvbXBvc2luZzoga2V5Qm9hcmRFdmVudC5pc0NvbXBvc2luZywKICAgICAgICBrZXk6IGtleUJvYXJkRXZlbnQua2V5LAogICAgICAgIGxvY2FsZToga2V5Qm9hcmRFdmVudC5sb2NhbGUsCiAgICAgICAgbG9jYXRpb246IGtleUJvYXJkRXZlbnQua2V5LAogICAgICAgIG1ldGFLZXk6IGtleUJvYXJkRXZlbnQubWV0YUtleSwKICAgICAgICByZXBlYXQ6IGtleUJvYXJkRXZlbnQucmVwZWF0LAogICAgICAgIHNoaWZ0S2V5OiBrZXlCb2FyZEV2ZW50LnNoaWZ0S2V5CiAgICAgIH07CiAgICAgIHRoaXMuc2FtcGxlLmtleUV2ZW50cy5wdXNoKGtleUV2ZW50KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Sample.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>Create a Typing Sample</h1>\n    <form @submit.prevent=\"addTypingSample\" v-on:keydown.enter=\"addTypingSample\" name=\"sample-form\" >\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label>Sample number:</label><span>&nbsp;{{sampleNumber}}</span><br/>\n                <span v-for=\"(char, index) in prompt\" :key=\"index\" v-bind:class=\"char.status\">{{char.char}}</span>\n            </div>\n          </div>\n        </div><br/>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"form-group\">\n              <textarea class=\"form-control\" \n                v-model=\"sample.body\" rows=\"5\" \n                v-on:keydown=\"pushKeyEvent\" \n                v-on:keyup=\"pushKeyEvent\"\n                />\n            </div>\n          </div>\n        </div><br/>\n        <div class=\"form-group\">\n            <input type=\"radio\" id=\"drunk\" value=\"drunk\" v-model=\"sample.label\">\n            <label for=\"drunk\">&nbsp;Drunk</label>&emsp;\n            <input type=\"radio\" id=\"sober\" value=\"sober\" v-model=\"sample.label\">\n            <label for=\"sober\">&nbsp;Sober</label>\n        </div><br/>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Create</button>\n        </div>\n    </form>\n  </div>\n</template>\n\n<script>\n    const STATUS = {\n        PENDING: \"pending\",\n        CORRECT: \"correct\",\n        MISTAKE: \"mistake\"\n    };\n\n    export default {\n        data: function(){\n            return {\n                sampleNumber: 0,\n                sample: {\n                    body: \"\",\n                    keyEvents: [],\n                    label: \"sober\"\n                }\n            }\n        },\n        computed: {\n            prompt: function (){\n                let promptSentence = \"The quick brown fox jumps over the lazy dog\";\n                let promptArray = [];\n                for (let i = 0; i < promptSentence.length; i++){\n                    promptArray[i] = {\n                        char: promptSentence[i],\n                        status: STATUS.PENDING\n                    };\n                }\n                return promptArray;\n            },\n            body: function () {return this.sample.body;}\n        },\n        watch:{\n            body: function(){\n                if (this.body.length <= this.prompt.length){\n                //Change colour of the prompt\n                for (let i = 0; i < this.body.length; i++){\n                        this.prompt[i].status = (this.body[i] == this.prompt[i].char) ? STATUS.CORRECT: STATUS.MISTAKE;\n                }\n                //Reset colour on backspace\n                    for (let i = this.body.length; i < this.prompt.length; i++) { \n                        this.prompt[i].status = STATUS.PENDING;\n                    }\n                }\n                //Reset the keyEvents if the textbox is reset\n                if (this.body.length==0){\n                    this.sample.keyEvents = [];\n                }\n            }\n        },\n        methods: {\n            addTypingSample: function (){\n                let url = \"http://localhost:4000/addSample\";\n                let body = this.sample;\n                this.axios.post(url, body).then(() => {\n                    this.sample = {\n                        body: \"\",\n                        keyEvents: [],\n                        label: \"sober\"\n                    };\n                    this.sampleNumber++;\n                    return false; \n                });\n            },\n            pushKeyEvent: function(keyBoardEvent){\n                if (keyBoardEvent.key == \"Enter\" || keyBoardEvent.key == \"Control\") { return };\n                let keyEvent = {\n                        eventTime: performance.now(),\n                        eventType: keyBoardEvent.type,\n                        altKey: keyBoardEvent.altKey,\n                        code: keyBoardEvent.code,\n                        ctrlKey: keyBoardEvent.ctrlKey,\n                        isComposing: keyBoardEvent.isComposing,\n                        key: keyBoardEvent.key,\n                        locale: keyBoardEvent.locale,\n                        location: keyBoardEvent.key,\n                        metaKey: keyBoardEvent.metaKey,\n                        repeat: keyBoardEvent.repeat,\n                        shiftKey: keyBoardEvent.shiftKey,\n                    };\n                this.sample.keyEvents.push(keyEvent);\n            }\n        }\n  }\n</script>\n\n<style scoped>\n    .pending {\n        white-space: pre;\n        color: gray;\n    }\n    .correct {\n        white-space: pre;\n        color: green;\n    }\n    .mistake{\n        white-space: pre;\n        color: red;\n    }\n</style>"],"sourceRoot":"src/components"}]}